const EXP_FRAC_SCALE: u32 = 512;

/// This can be moved out of build.rs when floating-point constant
/// arithmetic is stabilized: looks like Rust 1.81 in a few weeks.
///
/// round(f0 * 2**(i/12)) good for i in 0..12
fn exp_frac(i: u16) -> u32 {
    let f0 = 440.0 * f64::powf(2.0, -69.0 / 12.0);
    let p = EXP_FRAC_SCALE as f64 * f0 * f64::powf(2.0, (i as f64) / 12.0);
    f64::round(p) as u32
}

fn main() {
    use std::io::Write;

    let mut f = std::fs::File::create("src/exp_frac.rs").unwrap();
    writeln!(f, "// autogenerated in `build.rs` : do not edit").unwrap();
    writeln!(f, "pub const EXP_FRAC_SCALE: u32 = {};", EXP_FRAC_SCALE).unwrap();
    writeln!(f, "pub const EXP_FRAC: [u32; 12] = [").unwrap();
    for i in 0..12 {
        writeln!(f, "    {: <6} // {:02}", format!("{},", exp_frac(i)), i).unwrap();
    }
    writeln!(f, "];").unwrap();
}
